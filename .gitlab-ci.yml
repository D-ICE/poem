include:
  - project: 'common/ci-utils'
    file:
      - '/templates/.add-ssh-key.yml'
      - '/templates/.add-aws-key.yml'

.scripts:
  deps:
    - apt update
    - apt upgrade -y
    - apt remove cmake
    - apt install -y git build-essential
    - pip install cmake

#  ci-build:
#    - pip install cibuildwheel==2.22.0
#    - cibuildwheel --output-dir wheelhouse

# cibuildwheel SEE: https://cibuildwheel.pypa.io/en/stable/setup/#gitlab-ci

  cmake:
    - mkdir build && cd build
    - cmake ..
      -DCMAKE_BUILD_TYPE=Release
      -DPOEM_BUILD_TESTS=$ENABLE_TEST
      -DPOEM_BUILD_TOOLS=ON
      -DPOEM_ALLOW_DIRTY=OFF
      -DPOEM_BUILD_PYTHON=ON
      -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(pwd)

  awscli:
    - pip install awscli
    - mkdir -p $HOME/.aws
    - echo "[default]" > $HOME/.aws/credentials
    - echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> $HOME/.aws/credentials
    - echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> $HOME/.aws/credentials



test:
  only:
    - tags # TODO: retirer
  #  except:
  #    - tags  # don't run the tests on tags
  image: "python:$PYTHON_VERSION-bullseye" # TODO: on pourra prendre une debian autre...

  variables:
    PYTHON_VERSION: "3.10"
    ENABLE_TEST: "ON"

  before_script:
    - !reference [.add-ssh-key, before_script]
    - !reference [.scripts, deps]
    - !reference [ .scripts, awscli ]
  script:
    - !reference [.scripts, cmake]
    - make poem_tests -j6
    - cd bin/tests
    - ./poem_tests





# See example: https://github.com/wbarnha/pybind_cmake_example_crossbuild/tree/master:
# See example: https://gitlab.com/pytools4dart/gdecomp/-/blob/master/.gitlab-ci.yml
# See example: https://codebase.helmholtz.cloud/hcdc/software-templates/demos/gitlab-cibuildwheel-demo/-/blob/main/.gitlab-ci.yml?ref_type=heads

linux:
  image: python:3.12
  # make a docker daemon available for cibuildwheel to use
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - !reference [ .add-ssh-key, before_script ]
  script:
    - curl -sSL https://get.docker.com/ | sh
    - python -m pip install cibuildwheel
    - cibuildwheel --output-dir wheelhouse
  artifacts:
    paths:
      - wheelhouse/


#build-package-sdist:
##  stage: build
#  script:
#    - pip install build twine
#    - USE_CYTHON=true make dist
#    - twine check dist/*
#  artifacts:
#    name: python-artifacts
#    paths:
#      - "dist/*"
#      - "psy_ugrid/*.c"
#    expire_in: 7 days


#build-package-linux:
##  stage: build
##  image: docker:20.10
#  image: docker:dind-rootless
##  tags:
##    - dind
#  services:
#    - docker:20.10-dind
#  variables:
#    DOCKER_HOST: tcp://docker:2375/
#    DOCKER_DRIVER: overlay2
#    DOCKER_TLS_CERTDIR: ""
#  before_script:
#    - apk add --update --no-cache python3 py3-pip
#    - pip install build Cython twine cibuildwheel==2.16.5
#  script:
#    # build the wheel
#    - cibuildwheel --output-dir wheelhouse
#  artifacts:
#    name: python-artifacts
#    paths:
#      - "wheelhouse/"
#    expire_in: 7 days
##  needs:
##    - build-package-sdist



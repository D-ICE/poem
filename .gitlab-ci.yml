include:
  - project: 'common/ci-utils'
    file:
      - '/templates/.add-ssh-key.yml'
      - '/templates/.add-aws-key.yml'

.scripts:
  deps:
    - apt update
    - apt upgrade -y
    - apt remove cmake
    - apt install -y git build-essential
    - pip install cmake

#  ci-build:
#    - pip install cibuildwheel==2.22.0
#    - cibuildwheel --output-dir wheelhouse

# cibuildwheel SEE: https://cibuildwheel.pypa.io/en/stable/setup/#gitlab-ci

  cmake:
    - mkdir build && cd build
    - cmake ..
      -DCMAKE_BUILD_TYPE=Release
      -DPOEM_BUILD_TESTS=$ENABLE_TEST
      -DPOEM_BUILD_TOOLS=ON
      -DPOEM_ALLOW_DIRTY=OFF
      -DPOEM_BUILD_PYTHON=ON
      -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=$(pwd)

  awscli:
    - pip install awscli
    - mkdir -p $HOME/.aws
    - echo "[default]" > $HOME/.aws/credentials
    - echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> $HOME/.aws/credentials
    - echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> $HOME/.aws/credentials



test:
  only:
    - tags # TODO: retirer
  #  except:
  #    - tags  # don't run the tests on tags
  image: "python:$PYTHON_VERSION-bullseye" # TODO: on pourra prendre une debian autre...

  variables:
    PYTHON_VERSION: "3.10"
    ENABLE_TEST: "ON"

  before_script:
    - !reference [.add-ssh-key, before_script]
    - !reference [.scripts, deps]
    - !reference [ .scripts, awscli ]
  script:
    - !reference [.scripts, cmake]
    - make poem_tests -j6
    - cd bin/tests
    - ./poem_tests


# See example: https://github.com/wbarnha/pybind_cmake_example_crossbuild/tree/master:
# See example: https://gitlab.com/pytools4dart/gdecomp/-/blob/master/.gitlab-ci.yml


stages:
  - build-pypi
  - deploy-pypi


linux:
  services:
    - docker:dind
  image: docker:latest
  stage: build-pypi
  script:
    - docker info
    - apk add python3-dev
    - python3 --version
    - pip3 install cibuildwheel
    - CIBW_BUILD="cp3?-*" cibuildwheel --output-dir linuxwheels --platform linux
    - ls linuxwheels
  artifacts:
    paths:
      - linuxwheels




#python-build:
#  image: python:3.10
#  # make a docker daemon available for cibuildwheel to use
#  services:
#      - name: docker:dind
#        entrypoint: [ "env", "-u", "DOCKER_HOST" ]
#        command: [ "dockerd-entrypoint.sh" ]
#  variables:
#    DOCKER_HOST: tcp://docker:2375/
#    DOCKER_DRIVER: overlay2
#    # See https://github.com/docker-library/docker/pull/166
#    DOCKER_TLS_CERTDIR: ""
#  script:
#    - curl -sSL https://get.docker.com/ | sh
#    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#    - python -m pip install cibuildwheel==2.10.2
#    - git submodule update --init
#    - cibuildwheel --output-dir wheelhouse --platform linux --archs aarch64
#  artifacts:
#    paths:
#      - wheelhouse/



#.python-builds:
##  only:
##    - tags
#  image: "python:$PYTHON_VERSION-bullseye"
#
#  before_script:
#    - !reference [.add-ssh-key, before_script]
#    - !reference [.scripts, deps]
##    - !reference [.scripts, ci-build]
#
#  script:
#    - !reference [.scripts, cmake]
#    - make pypoem -j6
#    - ls
#
#
#python312:
#  variables:
#    PYTHON_VERSION: "3.12"
#    ENABLE_TEST: "OFF"
#  extends:
#    - .python-build

